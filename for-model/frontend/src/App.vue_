fileName: App.vue
---
<template>
    <v-app id="inspire">
        <div>
            <v-app-bar color="primary" app clipped-left flat>
                <v-toolbar-title>
                    <span class="second-word font uppercase"
                        style="font-weight:700;"
                    >
                        <v-app-bar-nav-icon
                            @click="openSideBar()"
                            style="z-index:1;
                            height:56px;
                            width:30px;
                            margin-right:10px;
                            font-weight:300;
                            font-size:55px;"
                        >
                            <div style="line-height:100%;">≡</div>
                        </v-app-bar-nav-icon>
                    </span>
                </v-toolbar-title>
                <span v-if="urlPath!=null" 
                    class="mdi mdi-home" 
                    key="" 
                    to="/" 
                    @click="goHome()"
                    style="margin-left:10px; font-size:20px; cursor:pointer;"
		        ></span> 
                <v-spacer></v-spacer>

                {{#if (isSelectedSecurity options.rootModel.toppingPlatforms)}}
                <b style="margin-left:10px">\{{username}} 님</b>
                <v-btn
                    text
                    color="white"
                    style="font-size:10px"
                    @click="logout()"
                >
                    Logout
                </v-btn>
                {{else}}
                {{/if}}
            </v-app-bar>

            <v-navigation-drawer app clipped flat v-model="sideBar">
                <v-list>
		    {{#boundedContexts}}
    		    {{#aggregates}}
                    <v-list-item
                        class="px-2"
                        key="{{namePlural}}"
                        to="/{{boundedContext.namePlural}}/{{namePlural}}"
                        @click="changeUrl()"
                        color="primary"
                        style="font-weight:700;"
                    >
                        {{#ifNotNull displayName namePascalCase}}{{/ifNotNull}}
                    </v-list-item>

    		    {{/aggregates}}

    		    {{#viewes}}
                    <v-list-item
                        class="px-2"
                        key="{{namePlural}}"
                        to="{{namePlural}}"
                        @click="changeUrl()"
                        color="primary"
                        style="font-weight:700;"
                    >
                        {{namePascalCase}}
                    </v-list-item>
    		    {{/viewes}}
		    {{/boundedContexts}}
                </v-list>
            </v-navigation-drawer>
        </div>

        <v-main>
            <v-container style="padding:0px;" v-if="urlPath" fluid>
                <router-view></router-view>
            </v-container>
            <v-container style="padding:0px;" v-else fluid>
                <div style="width:100%; margin:0px 0px 20px 0px; position: relative;">
                    <v-img style="width:100%; height:300px;"
                        src="{{#if options.rootModel.uiStyle.logoImage}}{{{options.rootModel.uiStyle.logoImage.url}}}{{/if}}"
                    ></v-img>
                    <div class="App-main-text-overlap">{{options.rootModel.uiStyle.serviceDescription.title}}</div>
                    <div class="App-sub-text-overlap">{{options.rootModel.uiStyle.serviceDescription.serviceDescription}}</div>
                </div>
                <v-row>
                    <v-col cols="4" class="d-flex justify-center" v-for="(aggregate, index) in aggregate" :key="index">
                        <div 
                            class="flip-card"
                            @mouseover="flipCard(index)"
                            @mouseleave="unflipCard(index)"
                            :class="{ 'is-flipped': flipped[index] }"
                        >
                            <div class="flip-card-inner">
                                <div class="flip-card-front">
                                    <v-card
                                        class="mx-auto"
                                        style="width:300px; min-height: 310px; margin-bottom:20px; text-align: center; border-radius: 10px;"
                                        outlined
                                    >
                                        <v-list-item style="padding:15px; margin:0px;">
                                            <v-img style="width:100%; height:120px; border-radius: 10px;" :src="aggregate.ImageUrl"></v-img>
                                        </v-list-item>
                                        <div style="text-align: left; padding:10px 15px 15px 15px; margin-top:-10px;">
                                            <h2>\{{ aggregate.title }}</h2>
                                            <div>\{{ aggregate.description }}</div>
                                        </div>
                                    </v-card>
                                </div>
                                <div class="flip-card-back">
                                    <v-card
                                        color="primary"
                                        class="mx-auto"
                                        style="width:300px; min-height: 310px; margin-bottom:20px; text-align: center; border-radius: 10px;"
                                        outlined
                                        :key="aggregate.key"
                                        :to="aggregate.route"
                                        @click="changeUrl()"
                                    >
                                        <v-list-item style="padding:15px; margin:0px;">
                                            <v-img style="width:100%; height:120px; border-radius: 10px;" :src="aggregate.ImageUrl"></v-img>
                                        </v-list-item>
                                        <h2 style="color:white;">\{{ aggregate.title }} 관리</h2>
                                    </v-card>
                                </div>
                            </div>
                        </div>
                    </v-col>
                </v-row>
            </v-container>
        </v-main>
    </v-app>
</template>

<script>
export default {
    name: "App",
    data: () => ({
        useComponent: "",
        drawer: true,
        components: {},
        sideBar: true,
        urlPath: null,
        menus: [
            {{#boundedContexts}}
            { id: '{{nameCamelCase}}', title: '{{#ifNotNull displayName namePascalCase}}{{/ifNotNull}}',
                items: [
                    {{#aggregates}}
                    { key: '{{namePlural}}', url: '/{{namePlural}}', name: '{{#ifNotNull displayName namePascalCase}}{{/ifNotNull}}' },
                    {{/aggregates}}
                ]
            },
            {{/boundedContexts}}
        ],
        cards: [
            {{#boundedContexts}}
            {{#aggregates}}
            {
                text: "{{#ifNotNull displayName namePascalCase}}{{/ifNotNull}}",
                link: "/{{namePlural}}",
            },
            {{/aggregates}}
            {{/boundedContexts}}
        ],
        activeMenu: null
    }),
    
    async created() {
      var path = document.location.href.split("#/")
      this.urlPath = path[1];
    },

    mounted() {
        var me = this;
        me.components = this.$ManagerLists;
    },
    computed: {
        activeMenuItems() {
            const activeMenu = this.menus.find(menu => menu.id === this.activeMenu);
            return activeMenu ? activeMenu.items : [];
        }
    },
    methods: {
        changeMenu(menuId) {
            this.activeMenu = this.activeMenu === menuId ? null : menuId;
        },
        openSideBar(){
            this.sideBar = !this.sideBar
        },
        changeUrl(url) {
            this.urlPath = url;
            window.location.href = url;
        },
        goHome() {
            this.urlPath = null;
            window.location.href = "/";
        },
    }
};
</script>

<style>
</style>

<function>
window.$HandleBars.registerHelper('ifNotNull', function (displayName, name) {
    if(displayName){
        return displayName;
    }else{
        return name;
    }
})
</function>
